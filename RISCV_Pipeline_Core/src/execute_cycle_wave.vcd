$date
	Sat Apr 26 15:13:12 2025
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module execute_cycle_tb $end
$var wire 32 ! WriteDataM [31:0] $end
$var wire 1 " ResultSrcM $end
$var wire 1 # RegWriteM $end
$var wire 5 $ RD_M [4:0] $end
$var wire 32 % PCTargetE [31:0] $end
$var wire 1 & PCSrcE $end
$var wire 32 ' PCPlus4M [31:0] $end
$var wire 1 ( MemWriteM $end
$var wire 32 ) ALU_ResultM [31:0] $end
$var reg 3 * ALUControlE [2:0] $end
$var reg 1 + ALUSrcE $end
$var reg 1 , BranchE $end
$var reg 2 - ForwardA_E [1:0] $end
$var reg 2 . ForwardB_E [1:0] $end
$var reg 32 / Imm_Ext_E [31:0] $end
$var reg 1 0 MemWriteE $end
$var reg 32 1 PCE [31:0] $end
$var reg 32 2 PCPlus4E [31:0] $end
$var reg 32 3 RD1_E [31:0] $end
$var reg 32 4 RD2_E [31:0] $end
$var reg 5 5 RD_E [4:0] $end
$var reg 1 6 RegWriteE $end
$var reg 1 7 ResultSrcE $end
$var reg 32 8 ResultW [31:0] $end
$var reg 1 9 clk $end
$var reg 1 : rst $end
$scope module dut $end
$var wire 3 ; ALUControlE [2:0] $end
$var wire 1 + ALUSrcE $end
$var wire 1 , BranchE $end
$var wire 2 < ForwardA_E [1:0] $end
$var wire 2 = ForwardB_E [1:0] $end
$var wire 32 > Imm_Ext_E [31:0] $end
$var wire 1 0 MemWriteE $end
$var wire 1 ( MemWriteM $end
$var wire 32 ? PCE [31:0] $end
$var wire 32 @ PCPlus4E [31:0] $end
$var wire 32 A PCPlus4M [31:0] $end
$var wire 1 & PCSrcE $end
$var wire 32 B RD1_E [31:0] $end
$var wire 32 C RD2_E [31:0] $end
$var wire 5 D RD_E [4:0] $end
$var wire 5 E RD_M [4:0] $end
$var wire 1 6 RegWriteE $end
$var wire 1 # RegWriteM $end
$var wire 1 7 ResultSrcE $end
$var wire 1 " ResultSrcM $end
$var wire 32 F ResultW [31:0] $end
$var wire 32 G WriteDataM [31:0] $end
$var wire 1 9 clk $end
$var wire 1 : rst $end
$var wire 1 H ZeroE $end
$var wire 32 I Src_B_interim [31:0] $end
$var wire 32 J Src_B [31:0] $end
$var wire 32 K Src_A [31:0] $end
$var wire 32 L ResultE [31:0] $end
$var wire 32 M PCTargetE [31:0] $end
$var wire 32 N ALU_ResultM [31:0] $end
$var reg 1 O MemWriteE_r $end
$var reg 32 P PCPlus4E_r [31:0] $end
$var reg 32 Q RD2_E_r [31:0] $end
$var reg 5 R RD_E_r [4:0] $end
$var reg 1 S RegWriteE_r $end
$var reg 32 T ResultE_r [31:0] $end
$var reg 1 U ResultSrcE_r $end
$scope module alu $end
$var wire 3 V ALUControl [2:0] $end
$var wire 1 W Carry $end
$var wire 1 X OverFlow $end
$var wire 1 H Zero $end
$var wire 32 Y Sum [31:0] $end
$var wire 32 Z Result [31:0] $end
$var wire 1 [ Negative $end
$var wire 1 \ Cout $end
$var wire 32 ] B [31:0] $end
$var wire 32 ^ A [31:0] $end
$upscope $end
$scope module alu_src_mux $end
$var wire 32 _ b [31:0] $end
$var wire 1 + s $end
$var wire 32 ` c [31:0] $end
$var wire 32 a a [31:0] $end
$upscope $end
$scope module branch_adder $end
$var wire 32 b a [31:0] $end
$var wire 32 c b [31:0] $end
$var wire 32 d c [31:0] $end
$upscope $end
$scope module srca_mux $end
$var wire 32 e a [31:0] $end
$var wire 32 f b [31:0] $end
$var wire 32 g c [31:0] $end
$var wire 2 h s [1:0] $end
$var wire 32 i d [31:0] $end
$upscope $end
$scope module srcb_mux $end
$var wire 32 j a [31:0] $end
$var wire 32 k b [31:0] $end
$var wire 32 l c [31:0] $end
$var wire 2 m s [1:0] $end
$var wire 32 n d [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
bx n
b0 m
b0 l
bx k
bx j
bx i
b0 h
b0 g
bx f
bx e
bx d
bx c
b0 b
bx a
bx `
bx _
bx ^
bx ]
0\
x[
bx Z
bx Y
xX
0W
bx V
0U
b0 T
0S
b0 R
b0 Q
b0 P
0O
b0 N
bx M
bx L
bx K
bx J
bx I
xH
b0 G
bx F
b0 E
bx D
bx C
bx B
b0 A
b100 @
b0 ?
bx >
b0 =
b0 <
bx ;
0:
09
bx 8
07
06
bx 5
bx 4
bx 3
b100 2
b0 1
00
bx /
b0 .
b0 -
0,
0+
bx *
b0 )
0(
b0 '
0&
bx %
b0 $
0#
0"
b0 !
$end
#5
19
#10
09
#15
bx )
bx N
bx T
bx g
bx l
bx !
bx G
bx Q
b10100 '
b10100 A
b10100 P
b101 $
b101 E
b101 R
1#
1S
0X
0[
0H
b11110 L
b11110 Z
b11110 Y
b10100 J
b10100 ]
b10100 `
b10100 I
b10100 a
b10100 n
b1010 K
b1010 ^
b1010 i
b11011110101011011011111011101111 8
b11011110101011011011111011101111 F
b11011110101011011011111011101111 f
b11011110101011011011111011101111 k
b10100 2
b10100 @
b10000 1
b10000 ?
b10000 b
b101 5
b101 D
b10100 4
b10100 C
b10100 j
b1010 3
b1010 B
b1010 e
b0 *
b0 ;
b0 V
16
19
1:
#20
09
#25
b11110 )
b11110 N
b11110 T
b11110 g
b11110 l
b10100 !
b10100 G
b10100 Q
b11000 '
b11000 A
b11000 P
b110 $
b110 E
b110 R
b110000 L
b110000 Z
b110000 Y
b11111111111111111111111111100000 J
b11111111111111111111111111100000 ]
b11111111111111111111111111100000 `
b1010000 K
b1010000 ^
b1010000 i
b11000 2
b11000 @
b10100 1
b10100 ?
b10100 b
b110 5
b110 D
b11111111111111111111111111110100 %
b11111111111111111111111111110100 M
b11111111111111111111111111110100 d
b11111111111111111111111111100000 /
b11111111111111111111111111100000 >
b11111111111111111111111111100000 _
b11111111111111111111111111100000 c
b1010000 3
b1010000 B
b1010000 e
1+
19
#30
09
#35
b110000 )
b110000 N
b110000 T
b110000 g
b110000 l
b11100 '
b11100 A
b11100 P
bx $
bx E
bx R
0#
0S
1&
1H
b0 L
b0 Z
b0 Y
b10101010 J
b10101010 ]
b10101010 `
b10101010 I
b10101010 a
b10101010 n
b10101010 K
b10101010 ^
b10101010 i
b11100 2
b11100 @
b11000 1
b11000 ?
b11000 b
bx 5
bx D
b111000 %
b111000 M
b111000 d
b100000 /
b100000 >
b100000 _
b100000 c
b10101010 4
b10101010 C
b10101010 j
b10101010 3
b10101010 B
b10101010 e
b1 *
b1 ;
b1 V
1,
0+
06
19
#40
09
#45
b0 )
b0 N
b0 T
b0 g
b0 l
b10101010 !
b10101010 G
b10101010 Q
b100000 '
b100000 A
b100000 P
0&
0H
b1 L
b1 Z
b1 Y
b10101011 K
b10101011 ^
b10101011 i
b100000 2
b100000 @
b111100 %
b111100 M
b111100 d
b11100 1
b11100 ?
b11100 b
b10101011 3
b10101011 B
b10101011 e
19
#50
09
#55
b1 )
b1 N
b1 T
b1 g
b1 l
b100100 '
b100100 A
b100100 P
b111 $
b111 E
b111 R
1#
1S
b110 L
b110 Z
b101 J
b101 ]
b101 `
b110 Y
b101 I
b101 a
b101 n
b1 K
b1 ^
b1 i
b10 -
b10 <
b10 h
b100100 2
b100100 @
b1000000 %
b1000000 M
b1000000 d
b100000 1
b100000 ?
b100000 b
b111 5
b111 D
b101 4
b101 C
b101 j
b10101010101010101010101010101010 3
b10101010101010101010101010101010 B
b10101010101010101010101010101010 e
b0 *
b0 ;
b0 V
0,
16
19
#60
09
#65
b110 )
b110 N
b110 T
b110 g
b110 l
b101 !
b101 G
b101 Q
b101000 '
b101000 A
b101000 P
b1000 $
b1000 E
b1000 R
b10110 L
b10110 Z
b10110 Y
b10000 J
b10000 ]
b10000 `
b110 K
b110 ^
b110 i
b10000 I
b10000 a
b10000 n
b1 .
b1 =
b1 m
b0 -
b0 <
b0 h
b10000 8
b10000 F
b10000 f
b10000 k
b101000 2
b101000 @
b1000100 %
b1000100 M
b1000100 d
b100100 1
b100100 ?
b100100 b
b1000 5
b1000 D
b10111011101110111011101110111011 4
b10111011101110111011101110111011 C
b10111011101110111011101110111011 j
b110 3
b110 B
b110 e
19
#70
09
#75
b10110 )
b10110 N
b10110 T
b10110 g
b10110 l
b10000 !
b10000 G
b10000 Q
b101100 '
b101100 A
b101100 P
bx $
bx E
bx R
1(
1O
0#
0S
b10000000000000000000001000000 L
b10000000000000000000001000000 Z
b10000000000000000000001000000 Y
b1000000 J
b1000000 ]
b1000000 `
b10101011110011011110111100000001 I
b10101011110011011110111100000001 a
b10101011110011011110111100000001 n
b10000000000000000000000000000 K
b10000000000000000000000000000 ^
b10000000000000000000000000000 i
b0 .
b0 =
b0 m
b101100 2
b101100 @
b101000 1
b101000 ?
b101000 b
bx 5
bx D
b1101000 %
b1101000 M
b1101000 d
b1000000 /
b1000000 >
b1000000 _
b1000000 c
b10101011110011011110111100000001 4
b10101011110011011110111100000001 C
b10101011110011011110111100000001 j
b10000000000000000000000000000 3
b10000000000000000000000000000 B
b10000000000000000000000000000 e
10
1+
06
19
#80
09
#85
b10000000000000000000001000000 )
b10000000000000000000001000000 N
b10000000000000000000001000000 T
b10000000000000000000001000000 g
b10000000000000000000001000000 l
b10101011110011011110111100000001 !
b10101011110011011110111100000001 G
b10101011110011011110111100000001 Q
19
#90
09
#95
19
#100
09
#105
19
